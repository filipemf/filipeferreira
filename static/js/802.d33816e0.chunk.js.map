{"version":3,"file":"static/js/802.d33816e0.chunk.js","mappings":"uKAkCA,UA/BkB,WACd,IAAAA,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,IAE1CI,EAAAA,EAAAA,YAAU,WACNC,OAAOC,iBAAiB,UAAU,WAC3BD,OAAOE,QAAU,IAChBJ,GAAmB,GAGnBA,GAAmB,EAE3B,GACJ,GAAG,IAQL,OACEK,EAAAA,EAAAA,KAAA,OAAAC,SACGP,IACCM,EAAAA,EAAAA,KAAA,UAAQE,UAAU,oHAAoHC,QATzH,WACbN,OAAOO,SAAS,CACZC,IAAK,EACLC,SAAU,UAElB,EAI4JL,UACpJD,EAAAA,EAAAA,KAACO,EAAAA,IAAS,CAACL,UAAU,wBAAwBM,KAAM,QAK/D,C","sources":["components/BackToTop.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {SlArrowUp} from 'react-icons/sl'\r\n\r\nconst BackToTop = () => {\r\n    const [backToTopButton, setBackToTopButton] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('scroll', ()=>{\r\n            if(window.scrollY > 100){\r\n                setBackToTopButton(true)\r\n            }\r\n            else{\r\n                setBackToTopButton(false)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const scrollUp = ()=>{\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n  return (\r\n    <div>\r\n      {backToTopButton && (\r\n        <button className='fixed bottom-[50px] z-[10] right-[50px] h-[50px] w-[50px] bg-[#18c8a8] border-solid border-2 border-white rounded' onClick={scrollUp} >\r\n            <SlArrowUp className='ml-[12px] text-[#fff]' size={20}/>\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackToTop"],"names":["_useState","useState","_useState2","_slicedToArray","backToTopButton","setBackToTopButton","useEffect","window","addEventListener","scrollY","_jsx","children","className","onClick","scrollTo","top","behavior","SlArrowUp","size"],"sourceRoot":""}