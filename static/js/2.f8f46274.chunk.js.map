{"version":3,"file":"static/js/2.f8f46274.chunk.js","mappings":"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","sources":["js/DTGBS.jsx","js/Ravit.jsx","js/Facilitador.jsx","components/Work.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport useSpline from '@splinetool/r3f-spline';\r\nimport { OrthographicCamera } from '@react-three/drei';\r\n\r\nexport default function DTGBS({ ...props }) {\r\n  const isSmallScreen = window.innerWidth < 768;\r\n  const { nodes, materials } = useSpline('https://prod.spline.design/ONQKVYmtdGzyIW-I/scene.splinecode');\r\n  const [rotationSpeed, setRotationSpeed] = useState(0.01); // adjust speed here\r\n\r\n  const mesh = useRef()\r\n\r\n  useFrame(() => {\r\n    mesh.current.rotation.y += 0.01\r\n    // mesh.current.position.y += 0.05\r\n    // mesh.current.position.x += 0.03\r\n    // const speed = 0.01; // adjust speed here\r\n    // mesh.current.rotation.y += speed * delta;\r\n    // mesh.current.position.y += speed * delta * 1;\r\n    // mesh.current.position.x += speed * delta * 0.1;\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <color attach=\"background\" args={['#747682']} />\r\n      <group {...props} dispose={null} ref={mesh}>\r\n        <mesh\r\n          name=\"criar-documento\"\r\n          geometry={nodes['criar-documento'].geometry}\r\n          material={materials['criar-documento Material']}\r\n          castShadow\r\n          receiveShadow\r\n          position={[140.75, 8.78, 79.63]}\r\n          rotation={[-0.58, 0.77, 0.48]}\r\n          scale={[0.8, 0.84, 0.61]}\r\n        >\r\n          <mesh\r\n            name=\"Rectangle\"\r\n            geometry={nodes.Rectangle.geometry}\r\n            material={materials['Rectangle Material']}\r\n            castShadow\r\n            receiveShadow\r\n            position={[-525.15, 122.69, 147.3]}\r\n          />\r\n          <mesh\r\n            name=\"Rectangle 2\"\r\n            geometry={nodes['Rectangle 2'].geometry}\r\n            material={materials['Rectangle 2 Material']}\r\n            castShadow\r\n            receiveShadow\r\n            position={[-525, 5.21, 149.55]}\r\n            rotation={[0, 0, 0]}\r\n            scale={1}\r\n          />\r\n          <mesh\r\n            name=\"Rectangle 3\"\r\n            geometry={nodes['Rectangle 3'].geometry}\r\n            material={materials['Rectangle 3 Material']}\r\n            castShadow\r\n            receiveShadow\r\n            position={[99.5, -168, 70]}\r\n          />\r\n        </mesh>\r\n        <OrthographicCamera\r\n          name=\"1\"\r\n          zoom={isSmallScreen ? 0.35 : 0.6}\r\n          makeDefault={true}\r\n          far={100000}\r\n          near={-100000}\r\n          position={[810.5, 227.87, 545.21]}\r\n          rotation={[-0.41, 0.93, 0.34]}\r\n        />\r\n        <hemisphereLight name=\"Default Ambient Light\" intensity={0.75} />\r\n      </group>\r\n    </>\r\n  );\r\n}\r\n","/*\n  Auto-generated by Spline\n*/\nimport { useState, useRef, useEffect } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport useSpline from '@splinetool/r3f-spline'\nimport { OrthographicCamera } from '@react-three/drei'\n\nexport default function Ravit({ ...props }) {\n  const isSmallScreen = window.innerWidth < 768;\n  const { nodes, materials } = useSpline('https://prod.spline.design/KHEZrR2B0VfEtlbw/scene.splinecode')\n  const [rotationSpeed, setRotationSpeed] = useState(0.01); // adjust speed here\n  const groupRef = useRef();\n\n  \n  useEffect(() => {\n    groupRef.current.rotation.y = 0; // or any other initial rotation value you want\n\n    const update = () => {\n      groupRef.current.rotation.y += rotationSpeed;\n    };\n\n    const id = requestAnimationFrame(function animate() {\n      update();\n      requestAnimationFrame(animate);\n    });\n\n    return () => cancelAnimationFrame(id);\n  }, [rotationSpeed]);\n\n  useEffect(() => {\n    // Move the group a little in the y-axis after being loaded\n    groupRef.current.position.y += 0.1;\n  }, []);\n\n  return (\n    <>\n      <color attach=\"background\" args={['#747682']} />\n      <group {...props} dispose={null} ref={groupRef}>\n        <group name=\"Group\" position={[-375.23, -152.57, 31.57]} rotation={[0, -0.49, 0]}>\n          <mesh\n            name=\"noticias\"\n            geometry={nodes.noticias.geometry}\n            material={materials['noticias Material']}\n            castShadow\n            receiveShadow\n            position={[52.82, 343.16, -191.38]}\n            rotation={[-0.32, 0.57, 0.23]}\n            scale={[0.8, 0.84, 0.61]}\n          />\n          <mesh\n            name=\"metas\"\n            geometry={nodes.metas.geometry}\n            material={materials['metas Material']}\n            castShadow\n            receiveShadow\n            position={[15.73, 44.68, 162.49]}\n            rotation={[-0.1, 0.82, 0.23]}\n            scale={[0.8, 0.84, 0.61]}\n          />\n          <mesh\n            name=\"perfil\"\n            geometry={nodes.perfil.geometry}\n            material={materials['perfil Material']}\n            castShadow\n            receiveShadow\n            position={[626.76, 282.25, -440.19]}\n            rotation={[-0.4, 0.4, 0.38]}\n            scale={[0.8, 0.84, 0.61]}\n          />\n          <mesh\n            name=\"feed\"\n            geometry={nodes.feed.geometry}\n            material={materials['feed Material']}\n            castShadow\n            receiveShadow\n            position={[443.46, 19.92, -202.78]}\n            rotation={[-Math.PI / 6, 0.7, Math.PI / 6]}\n            scale={[0.8, 0.84, 0.61]}\n          />\n        </group>\n        <OrthographicCamera\n          name=\"1\"\n          makeDefault={true}\n          zoom={isSmallScreen?0.35:0.55}\n          far={100000}\n          near={-100000}\n          position={[33.66, 121.99, 992.07]}\n          rotation={[-0.12, 0.03, 0]}\n        />\n        <hemisphereLight name=\"Default Ambient Light\" intensity={0.75} color=\"#eaeaea\" />\n      </group>\n    </>\n  )\n}\n\n\n\n","/*\n  Auto-generated by Spline\n*/\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport useSpline from '@splinetool/r3f-spline';\nimport { OrthographicCamera } from '@react-three/drei';\n\nexport default function Facilitador({ ...props }) {\n  const isSmallScreen = window.innerWidth < 768;\n  const { nodes, materials } = useSpline('https://prod.spline.design/sSiJqAAFx7QBdjIm/scene.splinecode')\n  const [rotationSpeed, setRotationSpeed] = useState(0.01); // adjust speed here\n  const groupRef = useRef();\n  \n  useEffect(() => {\n    groupRef.current.rotation.y = 0; // or any other initial rotation value you want\n\n    const update = () => {\n      groupRef.current.rotation.y += rotationSpeed;\n    };\n\n    const id = requestAnimationFrame(function animate() {\n      update();\n      requestAnimationFrame(animate);\n    });\n\n    return () => cancelAnimationFrame(id);\n  }, [rotationSpeed]);\n\n  useEffect(() => {\n    // Move the group a little in the y-axis after being loaded\n    groupRef.current.position.y += 0.1;\n  }, []);\n  \n  return (\n    <>\n      <color attach=\"background\" args={['#747682']} />\n      <group {...props} dispose={null} ref={groupRef}>\n        <mesh\n          name=\"criar-documento\"\n          geometry={nodes['criar-documento'].geometry}\n          material={materials['criar-documento Material']}\n          castShadow\n          receiveShadow\n          position={[-25.99, 31.94, 90.99]}\n          rotation={[-0.23, -0.17, 0.01]}\n          scale={[0.82, 0.85, 0.62]}\n        >\n          <mesh\n            name=\"Rectangle\"\n            geometry={nodes.Rectangle.geometry}\n            material={materials['Rectangle Material']}\n            castShadow\n            receiveShadow\n            position={[-119.04, 153.57, 84.45]}\n            rotation={[-0.07, -0.01, 0]}\n            scale={[1.23, 1.18, 1.61]}\n          />\n        </mesh>\n        <OrthographicCamera zoom={isSmallScreen?0.35:0.6} name=\"1\" makeDefault={true} far={100000} near={-100000} position={[0, 0, 1000]} />\n        <hemisphereLight name=\"Default Ambient Light\" intensity={0.75} color=\"#eaeaea\" />\n      </group>\n    </>\n  )\n}\n\n\n\n","import i18next from 'i18next';\nimport { Suspense, useState,  useRef, useEffect } from 'react'\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport 'react-awesome-button/dist/styles.css';\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/effect-cube\";\n\n// import required modules\nimport {Pagination, Navigation} from \"swiper\";\nimport SwiperCore from 'swiper/core';\n\nimport {AiFillGithub} from 'react-icons/ai'\nimport { AwesomeButton } from \"react-awesome-button\";\n\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\n\n\nimport DTGBS from '../js/DTGBS'\nimport Ravit from '../js/Ravit';\nimport Facilitador from '../js/Facilitador';\n\n\nfunction SpinningDTGBS() {\n  const mesh = useRef()\n\n  useFrame(() => {\n    mesh.current.rotation.y += 0.01\n    mesh.current.position.y += 0.01\n    mesh.current.position.x += 0.05\n  })\n\n  return (\n    <mesh ref={mesh} position={[0, 0, 0]}>\n      <DTGBS />\n    </mesh>\n  )\n}\n\nfunction CameraController() {\n  const controlsRef = useRef();\n\n  useFrame((state) => {\n    controlsRef.current.target.y += 0.01;\n    controlsRef.current.update();\n  });\n\n  return <OrbitControls ref={controlsRef} />;\n}\n\nconst Work = () => {\n  const [bgColor, setBgColor] = useState('#2d2e39');\n\n  SwiperCore.use([Pagination, Navigation]);\n\n  const handleSlideChange = (swiper) => {\n    const activeSlide = swiper.slides[swiper.activeIndex]; // get the active slide\n\n    if (activeSlide.classList.contains('dtgbs')) { // check if the active slide has the class 'dtgbs'\n      setBgColor('#ff2474'); // set background color to gray if the active slide has the class 'dtgbs'\n      console.log('dtgbs')\n    } \n    else if (activeSlide.classList.contains('ravit')) {\n      setBgColor('#3094d4');\n      console.log('ravit')\n    }\n    else{\n      setBgColor('#482c84');\n      console.log('facilitador')\n    }\n\n    \n  };\n\n\n\n  return (\n    <div name='work' id='about' className='w-auto h-[auto] text-gray-300 pb-[30px]' style={{backgroundColor:bgColor}}>\n\n      <div className='' style={{textAlign: 'center'}}>\n\n        <div className='inline-block mt-[40px]'>\n          <h1 className='timelineTitle font-bold text-5xl mb-[20px] text-[#fff]'>Portfolio</h1>\n        </div>\n\n\n          <div className='swiperContainer'>\n            <Swiper\n\n              cssMode={true}\n              navigation={true}\n              keyboard={true}\n              loop={true}\n\n              // onSlideChange={(swiper) => handleSlideChange(swiper)} // call handleSlideChange function on slide change\n\n              grabCursor={true}\n              cubeEffect={{\n                shadow: true,\n                slideShadows: true,\n                shadowOffset: 20,\n                shadowScale: 0.94,\n              }}\n              pagination={true}\n              modules={[Pagination, Navigation]}\n              className=\"mySwiper\"\n\n            >\n\n              {/* DTGBS */}\n              <SwiperSlide className='dtgbs'>\n                <h3 className='portfolioTitles mb-50px text-[#fff]'>{i18next.t(\"portfolio.firstWork.title\")}</h3>\n\n                <p className='mt-[30px] p-[20px] text-[#fff]'>{i18next.t(\"portfolio.firstWork.about\")}</p>\n\n                <div style={{marginBottom: '15px'}}>\n                  <a href=\"https://github.com/filipemf/DTGBS-Contratos\" target=\"_blank\" rel=\"noreferrer\">\n                    <AwesomeButton size='large' style={{'height':'70px'}} type=\"primary\" after={<AiFillGithub className='ml-[10px]' size={30}/>}>{i18next.t(\"portfolio.button\")}</AwesomeButton>\n                  </a>\n                </div>\n                  \n                <div className='canvasContainer'>\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <Canvas shadows flat linear>\n                      <DTGBS/>\n                      <OrbitControls  autoRotate\n                        enablePan={true}\n                        enableDamping\n                        dampingFactor={0.1}\n                        rotateSpeed={0.5}\n                        maxPolarAngle={Math.PI / 2}\n                        minPolarAngle={Math.PI / 2}/>\n\n                    {/* <CameraController /> */}\n                    </Canvas>\n                  </Suspense>\n                </div>\n              </SwiperSlide>\n\n\n\n              {/* RAVIT */}\n              <SwiperSlide className='ravit'>\n                <h3 className='portfolioTitles mb-50px text-[#fff]'>{i18next.t(\"portfolio.secondWork.title\")}</h3>\n\n                <p className='mt-[30px] p-[20px] text-[#fff]'>{i18next.t(\"portfolio.secondWork.about\")}</p>\n\n                <div style={{marginBottom: '15px'}}>\n                  <a href='https://github.com/filipemf/Ravit' target=\"_blank\" rel=\"noreferrer\">\n                    <AwesomeButton size='large' style={{'height':'70px'}}  type=\"primary\" after={<AiFillGithub className='ml-[10px]' size={30}/>}>{i18next.t(\"portfolio.button\")}</AwesomeButton>\n                  </a>\n                </div>\n                  \n                <div className='canvasContainer'>\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <Canvas shadows flat linear >\n                      <Ravit />\n                      <OrbitControls  autoRotate\n                        enablePan={true}\n                        enableDamping\n                        dampingFactor={0.1}\n                        rotateSpeed={0.5}\n                        maxPolarAngle={Math.PI / 2}\n                        minPolarAngle={Math.PI / 2}/>\n                    </Canvas>\n                  </Suspense>\n                </div>\n              </SwiperSlide>\n              \n\n\n\n              {/* FACILITADOR */}\n              <SwiperSlide className='facilitador'>\n                <h3 className='portfolioTitles mb-50px text-[#fff]'>{i18next.t(\"portfolio.thirdWork.title\")}</h3>\n\n                <p className='mt-[30px] p-[20px] text-[#fff]'>{i18next.t(\"portfolio.thirdWork.about\")}</p>\n\n                <div style={{marginBottom: '15px'}}>\n                  <a href='https://github.com/filipemf/electron-facilitador' target=\"_blank\" rel=\"noreferrer\">\n                    <AwesomeButton size='large' style={{'height':'70px'}}  type=\"primary\" after={<AiFillGithub className='ml-[10px]' size={30}/>}>{i18next.t(\"portfolio.button\")}</AwesomeButton>\n                  </a>\n                </div>\n                  \n                <div className='canvasContainer'>\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <Canvas shadows flat linear >\n                      <Facilitador />\n                      <OrbitControls  \n                        autoRotate\n                        enablePan={true}\n                        enableDamping\n                        dampingFactor={0.1}\n                        rotateSpeed={0.5}\n                        maxPolarAngle={Math.PI / 2}\n                        minPolarAngle={Math.PI / 2}/>\n                    </Canvas>\n                  </Suspense>\n                </div>\n              </SwiperSlide>\n\n            </Swiper>\n\n          </div>\n          \n      </div>\n    </div>\n  )\n\n  \n};\n\nexport default Work;\n"],"names":["DTGBS","_ref","props","Object","assign","_objectDestructuringEmpty","isSmallScreen","window","innerWidth","_useSpline","useSpline","nodes","materials","_useState","useState","_useState2","_slicedToArray","mesh","useRef","useFrame","current","rotation","y","_jsxs","_Fragment","children","_jsx","attach","args","_objectSpread","dispose","ref","name","geometry","material","castShadow","receiveShadow","position","scale","Rectangle","OrthographicCamera","zoom","makeDefault","far","near","intensity","Ravit","rotationSpeed","groupRef","useEffect","id","requestAnimationFrame","animate","cancelAnimationFrame","noticias","metas","perfil","feed","Math","PI","color","Facilitador","bgColor","SwiperCore","Pagination","Navigation","className","style","backgroundColor","textAlign","Swiper","cssMode","navigation","keyboard","loop","grabCursor","cubeEffect","shadow","slideShadows","shadowOffset","shadowScale","pagination","modules","SwiperSlide","i18next","marginBottom","href","target","rel","AwesomeButton","size","type","after","AiFillGithub","Suspense","fallback","Canvas","shadows","flat","linear","OrbitControls","autoRotate","enablePan","enableDamping","dampingFactor","rotateSpeed","maxPolarAngle","minPolarAngle"],"sourceRoot":""}